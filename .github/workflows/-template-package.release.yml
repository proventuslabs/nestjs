on:
  workflow_call:
    inputs:
      package_name:
        description: "The name of the package (e.g., zod, multipart-form)"
        required: true
        type: string
      package_npm_workspace:
        description: "The npm workspace name for the package (e.g., @proventuslabs/nestjs-zod)"
        required: true
        type: string
      package_tag_name:
        description: "The release tag name for the package"
        required: true
        type: string
    secrets:
      NPM_TOKEN:
        required: true

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          registry-url: "https://registry.npmjs.org"

      - name: Cache root & workspace node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/${{ inputs.package_name }}/node_modules
          key: ${{ runner.os }}-node-20-npm-${{ hashFiles('package-lock.json', format('packages/{0}/package-lock.json', inputs.package_name)) }}
          restore-keys: |
            ${{ runner.os }}-node-20-npm-

      - run: npm ci

      - name: Build package ${{ inputs.package_name }}
        run: npm run build --workspace=${{ inputs.package_npm_workspace }}

      - name: Zip build artifact for ${{ inputs.package_name }}
        run: zip -r ${{ inputs.package_name }}-build.zip packages/${{ inputs.package_name }}/dist

      - name: Upload build artifact for ${{ inputs.package_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh release upload ${{ inputs.package_tag_name }} ${{ inputs.package_name }}-build.zip

  publish-npm:
    runs-on: ubuntu-latest
    needs: build-and-upload # Ensure publish only runs after build and upload
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"
          registry-url: "https://registry.npmjs.org"

      - name: Cache root & workspace node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/${{ inputs.package_name }}/node_modules
          key: ${{ runner.os }}-node-20-npm-${{ hashFiles('package-lock.json', format('packages/{0}/package-lock.json', inputs.package_name)) }}
          restore-keys: |
            ${{ runner.os }}-node-20-npm-

      - run: npm ci # Re-install dependencies for publish job

      - name: Publish ${{ inputs.package_npm_workspace }} to npm
        run: npm publish --workspace=${{ inputs.package_npm_workspace }} --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
