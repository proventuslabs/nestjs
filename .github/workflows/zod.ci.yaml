name: Zod Package CI

on:
  pull_request:
    paths:
      - packages/zod/**
      - .github/workflows/zod.ci.yaml
    branches:
      - main

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  build:
    name: Build package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Cache root & workspace node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/zod/node_modules
          key: ${{ runner.os }}-node-20-npm-${{ hashFiles('package-lock.json', 'packages/zod/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-20-npm-
          
      - name: Install dependencies
        run: npm ci
        
      - name: Build zod package
        run: npm run build --workspace=@proventuslabs/nestjs-zod

  typecheck:
    name: Typecheck package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Cache root & workspace node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/zod/node_modules
          key: ${{ runner.os }}-node-20-npm-${{ hashFiles('package-lock.json', 'packages/zod/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-20-npm-
          
      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript typecheck
        run: |
          npm run typecheck --workspace=@proventuslabs/nestjs-zod 2>&1 | \
          sed -E 's/^([^:]+)\(([^,]+),([^)]+)\): (error|warning) [^:]+: (.*)$/::\4 file=\1,line=\2,col=\3::\5/'

      # - name: Setup reviewdog
      #   uses: reviewdog/action-setup@v1
      #   with:
      #     reviewdog_version: latest

      # - name: Run TypeScript typecheck with reviewdog
      #   run: |
      #     npm run typecheck --workspace=@proventuslabs/nestjs-zod 2>&1 | \
      #     reviewdog -f=tsc \
      #       -name="Typecheck" \
      #       -reporter=github-check \
      #       -fail-level=any
      #   env:
      #     REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test:
    name: Test package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Cache root & workspace node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/zod/node_modules
          key: ${{ runner.os }}-node-20-npm-${{ hashFiles('package-lock.json', 'packages/zod/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-20-npm-
          
      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test --workspace=@proventuslabs/nestjs-zod -- --reporters=github-actions

      # TODO: reviewdog

  lint:
    name: Lint package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Cache root & workspace node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/zod/node_modules
          key: ${{ runner.os }}-node-20-npm-${{ hashFiles('package-lock.json', 'packages/zod/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-20-npm-
          
      - name: Install dependencies
        run: npm ci

      - name: Run Biome lint
        run: npm run lint --workspace=@proventuslabs/nestjs-zod -- --reporter=github

      # - name: Setup reviewdog
      #   uses: reviewdog/action-setup@v1
      #   with:
      #     reviewdog_version: latest

      # - name: Run Biome lint with reviewdog
      #   run: |
      #     npm run lint --workspace=@proventuslabs/nestjs-zod -- --reporter=github 2>&1 | \
      #     sed -E 's/::error title=([^,]*),file=([^,]*),line=([^,]*),endLine=([^,]*),col=([^,]*),endColumn=([^,]*)::(.*)$/\2:\3:\5: \1: \7/' | \
      #     reviewdog \
      #       -efm="%f:%l:%c: %m" \
      #       -reporter=github-check \
      #       -fail-level=any
      #   env:
      #     REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  format:
    name: Format package
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Cache root & workspace node_modules
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            packages/zod/node_modules
          key: ${{ runner.os }}-node-20-npm-${{ hashFiles('package-lock.json', 'packages/zod/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-20-npm-
          
      - name: Install dependencies
        run: npm ci

      - name: Run Biome format
        run: npm run format --workspace=@proventuslabs/nestjs-zod -- --reporter=github

      # - name: Setup reviewdog
      #   uses: reviewdog/action-setup@v1
      #   with:
      #     reviewdog_version: latest

      # - name: Run Biome format with reviewdog
      #   run: |
      #     npm run format --workspace=@proventuslabs/nestjs-zod -- --reporter=github 2>&1 | \
      #     sed -E 's/::error title=([^,]*),file=([^,]*),line=([^,]*),endLine=([^,]*),col=([^,]*),endColumn=([^,]*)::(.*)$/\2:\3:\5: \1: \7/' | \
      #     reviewdog \
      #       -efm="%f:%l:%c: %m" \
      #       -reporter=github-check \
      #       -fail-level=any
      #   env:
      #     REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
